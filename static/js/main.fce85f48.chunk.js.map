{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","pokemonNames","useState","pokemon","setPokemon","pokemonData","setPokemonData","pokemonType","setPokemonType","getPokemon","a","toArray","url","fetch","res","json","data","push","types","type","name","toUpperCase","slice","alert","console","log","getPokemonNames","min","max","Math","ceil","floor","random","fetchPro","i","results","length","url2","res2","data2","className","onSubmit","e","preventDefault","placeholder","onChange","target","value","toLowerCase","class","onClick","map","src","sprites","alt","id","round","height","weight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fce85f48.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const pokemonNames = {};\n  const [pokemon, setPokemon] = useState('');\n  const [pokemonData, setPokemonData] = useState([]);\n  const [pokemonType, setPokemonType] = useState('');\n\n  const getPokemon = async function () {\n    const toArray = [];\n    try {\n      const url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      toArray.push(data);\n      setPokemonType(\n        `${data.types[0].type.name[0].toUpperCase()}${data.types[0].type.name.slice(\n          1\n        )}`\n      );\n      setPokemonData(toArray);\n    } catch (err) {\n      alert(\n        \"We couldn't find that PokÃ©mon. Make sure you don't have any typos and try again!\"\n      );\n      console.log(err);\n    }\n  };\n\n  const randomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const getPokemonNames = async function () {\n    const random = randomInt(1, 898);\n    const toArray = [];\n    try {\n      const url = 'https://pokeapi.co/api/v2/pokemon?limit=1000';\n      const fetchPro = fetch(url);\n      const res = await fetchPro;\n      const data = await res.json();\n\n      for (let i = 0; i < data.results.length; i++) {\n        pokemonNames[i] = data.results[i].name;\n      }\n\n      const url2 = `https://pokeapi.co/api/v2/pokemon/${pokemonNames[random]}`;\n      const res2 = await fetch(url2);\n      const data2 = await res2.json();\n\n      toArray.push(data2);\n      setPokemonType(\n        `${data2.types[0].type.name[0].toUpperCase()}${data2.types[0].type.name.slice(\n          1\n        )}`\n      );\n      setPokemonData(toArray);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    setPokemon(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getPokemon();\n  };\n\n  const handleClick = e => {\n    getPokemonNames();\n  };\n\n  return (\n    <div className=\"tc\">\n      <h1 className=\"f2 white\">PokÃ©dex</h1>\n      <form className=\"pa2\" onSubmit={handleSubmit}>\n        <label>\n          <input\n            className=\"pa2 ba b--red\"\n            type=\"text\"\n            placeholder=\"Enter pokÃ©mon name\"\n            onChange={handleChange}\n          />\n        </label>\n      </form>\n      <p className=\"white\">OR</p>\n      <button class=\"random\" onClick={handleClick}>\n        ðŸ”€ Random PokÃ©mon\n      </button>\n      {pokemonData.map(data => {\n        return (\n          <div className=\"container\">\n            <img src={data.sprites['front_default']} alt=\"pokÃ©mon\" />\n            <div className=\"divTable\">\n              <div className=\"divTableBody\">\n                <div className=\"divTableRow\">\n                  <div className=\"divTableCell\">Name</div>\n                  <div className=\"divTableCell\">\n                    {`${data.name[0].toUpperCase()}${data.name.slice(1)}`}\n                  </div>\n                </div>\n                <div className=\"divTableRow\">\n                  <div className=\"divTableCell\">Number</div>\n                  <div className=\"divTableCell\">{data.id}</div>\n                </div>\n                <div className=\"divTableRow\">\n                  <div className=\"divTableCell\">Type</div>\n                  <div className=\"divTableCell\">{pokemonType}</div>\n                </div>\n                <div className=\"divTableRow\">\n                  <div className=\"divTableCell\">Height</div>\n                  <div className=\"divTableCell\">\n                    {' '}\n                    {Math.round(data.height * 3.9)}\"\n                  </div>\n                </div>\n                <div className=\"divTableRow\">\n                  <div className=\"divTableCell\">Weight</div>\n                  <div className=\"divTableCell\">\n                    {' '}\n                    {Math.round(data.weight / 4.3)} lbs\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}